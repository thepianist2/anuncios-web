<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Contacto', 'doctrine');

/**
 * BaseContacto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nombre
 * @property string $email
 * @property string $telefono
 * @property string $empresa
 * @property string $comentario
 * @property string $documento
 * @property boolean $borrado
 * 
 * @method string   getNombre()     Returns the current record's "nombre" value
 * @method string   getEmail()      Returns the current record's "email" value
 * @method string   getTelefono()   Returns the current record's "telefono" value
 * @method string   getEmpresa()    Returns the current record's "empresa" value
 * @method string   getComentario() Returns the current record's "comentario" value
 * @method string   getDocumento()  Returns the current record's "documento" value
 * @method boolean  getBorrado()    Returns the current record's "borrado" value
 * @method Contacto setNombre()     Sets the current record's "nombre" value
 * @method Contacto setEmail()      Sets the current record's "email" value
 * @method Contacto setTelefono()   Sets the current record's "telefono" value
 * @method Contacto setEmpresa()    Sets the current record's "empresa" value
 * @method Contacto setComentario() Sets the current record's "comentario" value
 * @method Contacto setDocumento()  Sets the current record's "documento" value
 * @method Contacto setBorrado()    Sets the current record's "borrado" value
 * 
 * @package    anuncios
 * @subpackage model
 * @author     Fabian Allel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContacto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contacto');
        $this->hasColumn('nombre', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('telefono', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('empresa', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('comentario', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('documento', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('borrado', 'boolean', null, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'default' => '0',
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}